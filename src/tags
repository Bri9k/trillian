!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BOARD_H	board.h	2;"	d
DEFS_H	defs.h	2;"	d
DIR_NONE	moves.c	12;"	d	file:
DISPLAY_h	display.h	2;"	d
FEN_TOKENS	board.c	7;"	d	file:
MAX_PIECES	pieces.h	6;"	d
MOVES_H	moves.h	2;"	d
NONE	board.h	6;"	d
PIECES_H	pieces.h	2;"	d
blacks	pieces.h	/^	piece blacks[MAX_PIECES];$/;"	m	struct:__anon6
brd	board.h	/^	square brd[8][8]; \/* contains characters in SAN notation which represent pieces *\/$/;"	m	struct:__anon3
calculate	moves.c	/^void calculate(piece *p, chessboard ch) {$/;"	f
can_move	moves.c	/^int can_move(piece p, square sq, chessboard ch) {$/;"	f
can_slide	moves.c	10;"	d	file:
castling	board.h	/^	usint castling; \/* X X X X B-queenside B-kingside W-kingside W-queenside *\/$/;"	m	struct:__anon3
chessboard	board.h	/^}chessboard;$/;"	t	typeref:struct:__anon3
chesset	pieces.h	/^}chesset;$/;"	t	typeref:struct:__anon6
dir_incr	pieces.h	/^	usint dir_start, dir_incr; \/*Q-> 0, 1. R-> 0, 2. B-> 1, 2 *\/$/;"	m	struct:__anon4
dir_start	pieces.h	/^	usint dir_start, dir_incr; \/*Q-> 0, 1. R-> 0, 2. B-> 1, 2 *\/$/;"	m	struct:__anon4
dirs	pieces.h	/^	usint dirs[8]; \/* w, nw, n, ne, e, se, s, sw *\/$/;"	m	struct:__anon4
display	display.c	/^void display(chessboard board) {$/;"	f
dx	moves.h	/^	usint dx, dy;$/;"	m	struct:__anon7
dx	pieces.h	/^	usint dx, dy;$/;"	m	struct:__anon5
dy	moves.h	/^	usint dx, dy;$/;"	m	struct:__anon7
dy	pieces.h	/^	usint dx, dy;$/;"	m	struct:__anon5
enpass_target	board.h	/^	position enpass_target; \/* the square to which enpass is allowed (there is only one) *\/$/;"	m	struct:__anon3
fenstring_to_board	board.c	/^int fenstring_to_board(chessboard *board, char fenstring[]) {$/;"	f
file	board.h	/^	usint rank, file;$/;"	m	struct:__anon2
fin	moves.h	/^	square fin;$/;"	m	struct:__anon8
find_dir	moves.c	/^usint find_dir(movement sl) {$/;"	f
find_movement	moves.c	/^movement find_movement(move mv) {$/;"	f
fullmoves	board.h	/^	usint fullmoves; \/* number of black moves *\/$/;"	m	struct:__anon3
get_fentok	board.c	/^int get_fentok(char tok[], char str[], int reset) {$/;"	f
halfmoves	board.h	/^	usint halfmoves; \/* number of non-pawn and non capture moves (for 50 move rule) *\/$/;"	m	struct:__anon3
index	board.h	/^	ssint index; \/* index in piece array in set *\/$/;"	m	struct:__anon1
ini	moves.h	/^	square ini;$/;"	m	struct:__anon8
interface_board_set	pieces.c	/^void interface_board_set(chessboard *board, chesset *set) {$/;"	f
isBlack	defs.h	8;"	d
isDifferent	moves.c	7;"	d	file:
isSame	moves.c	6;"	d	file:
isWhite	defs.h	7;"	d
knight_move	moves.c	/^int knight_move(piece q, square sq){$/;"	f
main	main.c	/^int main(void) {$/;"	f
move	moves.h	/^}move;$/;"	t	typeref:struct:__anon8
movement	moves.h	/^}movement;$/;"	t	typeref:struct:__anon7
movement	pieces.h	/^}movement;$/;"	t	typeref:struct:__anon5
n_black	pieces.h	/^	int n_black;$/;"	m	struct:__anon6
n_white	pieces.h	/^	int n_white;$/;"	m	struct:__anon6
pawn_move	moves.c	/^int pawn_move(piece q, square sq) {$/;"	f
pc	board.h	/^	char pc; \/* representation of piece *\/$/;"	m	struct:__anon1
piece	pieces.h	/^	char piece;$/;"	m	struct:__anon4
piece	pieces.h	/^}piece;$/;"	t	typeref:struct:__anon4
piece_can_slide	moves.c	/^int piece_can_slide(piece p, square sq) {$/;"	f
pin_dir	pieces.h	/^	usint pin_dir;$/;"	m	struct:__anon4
player	board.h	/^	char player; \/* 'w' white 'b' black to move *\/$/;"	m	struct:__anon3
position	board.h	/^}position;$/;"	t	typeref:struct:__anon2
ps	pieces.h	/^	position ps;$/;"	m	struct:__anon4
rank	board.h	/^	usint rank, file;$/;"	m	struct:__anon2
safe_atoi	board.c	/^int safe_atoi(char string[]) {$/;"	f
set_piece	pieces.c	/^void set_piece(piece *p, char pc, int rank, int file) {$/;"	f
slide_distance	moves.c	/^usint slide_distance(usint direction) {$/;"	f
slide_update	moves.c	9;"	d	file:
square	board.h	/^}square;$/;"	t	typeref:struct:__anon1
ssint	defs.h	/^typedef char ssint;$/;"	t
std	Makefile	/^	gcc -c board.c -Wall -std=c89$/;"	m
std	Makefile	/^	gcc -c display.c -Wall -std=c89$/;"	m
std	Makefile	/^	gcc -c main.c -Wall -std=c89$/;"	m
std	Makefile	/^	gcc -c pieces.c -Wall -std=c89 $/;"	m
std	Makefile	/^	gcc main.o board.o display.o -Wall -std=c89 -o try$/;"	m
update_slide	moves.c	/^void update_slide(piece *p, chessboard ch, usint direction) {$/;"	f
usint	defs.h	/^typedef unsigned char usint;$/;"	t
valid_enpass_square	board.c	8;"	d	file:
whites	pieces.h	/^	piece whites[MAX_PIECES];$/;"	m	struct:__anon6
xincr	moves.c	/^ssint xincr(usint direction) {$/;"	f
yincr	moves.c	/^ssint yincr(usint direction) {$/;"	f
